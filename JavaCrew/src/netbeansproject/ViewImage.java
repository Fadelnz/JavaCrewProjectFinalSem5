/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package netbeansproject;

import java.awt.Image;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * created by Hana Saffiyya binti Ahmad Nozal (78013)
 * tested by Ngu Keh Cong (80369)
 */
public class ViewImage extends javax.swing.JFrame {
    private ImageIcon format=null;
    private int imgID;
    private byte[] imagedata;
    private Image img,img2;
    private ImageIcon image;
    
    /**
     * Creates new form ViewImage
     * @throws java.sql.SQLException
     */
    public ViewImage() throws SQLException {
        initComponents();
        database d=new database();
        d.connect();
        retrieveImageID(d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backIcon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        imageID = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        labelDisplayImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        backIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_back_to_40px.png"))); // NOI18N
        backIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backIconMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Please select which image to view. ");

        imageID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Image ID" }));
        imageID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelDisplayImage, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelDisplayImage, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(80, 80, 80))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(imageID, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backIcon)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(backIcon)
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(imageID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backIconMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backIconMouseClicked
    
    //jcombox is clicked
    private void imageIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageIDActionPerformed
        // TODO add your handling code here:
        imgID= Integer.parseInt(imageID.getSelectedItem().toString());

        
        String query="SELECT img FROM image WHERE img_id=?";
        database d=new database();
        d.connect();
        try {
            d.setStatement(query);
        } catch (SQLException ex) {
            Logger.getLogger(ViewImage.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            d.getStatement().setInt(1,imgID);
        } catch (SQLException ex) {
            Logger.getLogger(ViewImage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            d.executeQ();
        } catch (SQLException ex) {
            Logger.getLogger(ViewImage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            if(d.getResultSet().next()){
                retrieveImage(d);
            }
            
            else{
                JOptionPane.showMessageDialog(this,"No image found");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewImage.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            d.disconnect();
        } catch (SQLException ex) {
            Logger.getLogger(ViewImage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_imageIDActionPerformed

    public void retrieveImageID(database d) throws SQLException{
        String query="SELECT img_id FROM image";
        d.setStatement(query);
        d.executeQ();
        while(d.getResultSet().next()){
            String id=d.getResultSet().getString(1);
            imageID.addItem(id);
        }
    }
    
    public void retrieveImage(database d) throws SQLException{
        imagedata=d.getResultSet().getBytes("img");
        format= new ImageIcon(imagedata);
        img=format.getImage();
        img2=img.getScaledInstance(355,417,Image.SCALE_SMOOTH);
        image= new ImageIcon(img2);
        labelDisplayImage.setIcon(image);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new ViewImage().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewImage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backIcon;
    private javax.swing.JComboBox<String> imageID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelDisplayImage;
    // End of variables declaration//GEN-END:variables
}
